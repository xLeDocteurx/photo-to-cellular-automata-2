{"version":3,"sources":["logo.svg","wrappers/p5.js","sketches/sketch.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","P5Wrapper","props","state","canvas","doesComponentReceivedData","bind","this","setState","p5","sketch","el","data","id","ref","Component","launchButton","cells","loadImage","file","img","background","filter","width","height","ratio","resize","image","displayImage","w","h","loadPixels","x","push","y","i","r","pixels","g","b","newr2","Math","round","newg2","newb2","alive","color","levels","Cell","forEach","col","cell","draw","computeImage","noLoop","createButton","position","mousePressed","loop","alert","setup","createCanvas","resizeCanvas","frameRate","drop","gotFile","fill","noStroke","textSize","textAlign","CENTER","text","computeNextState","overwriteState","aliveNext","alivePrevious","alive_neighboors","numberOfAliveNeighboors","length","pop","rect","xMinus","xPluss","yMinus","yPluss","type","parentWidth","parent","clientWidth","parentHeight","clientHeight","windowResized","App","mySketch","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.8e20fd8f.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React, {Component} from 'react'\nimport p5 from 'p5'\n\nclass P5Wrapper extends Component {\n\n    constructor(props) {\n        super(props)\n\n        this.state = {\n            canvas: null,\n        }\n\n        this.doesComponentReceivedData = this.doesComponentReceivedData.bind(this)\n    }\n\n    componentDidMount() {\n        this.setState({canvas: new p5(this.props.sketch, this.el)})\n    }\n\n    componentDidUpdate() {\n        this.doesComponentReceivedData()\n    }\n\n    doesComponentReceivedData() {\n        this.state.canvas.data = this.props.data ? this.props.data : null\n\n        // this.setState((prevState) => ({\n        //     canvas: {\n        //         ...prevState.canvas,\n        //         ...dataObject\n        //     }\n        // }))\n    }\n\n    render() {\n        return (\n            <div id=\"canva-container\" ref={(el) => {this.el = el}}></div>\n        )\n    }\n}\n\nexport default P5Wrapper","export default function sketch (p5) {\n    let canvas = null\n    let image\n    let inputButton\n    let launchButton\n\n    let cells\n\n    const cellSize = 10\n    // const greyValues = 2\n    const greyValues = 3\n    const colorThreshold = 150\n    // const colorThreshold = 200\n\n    p5.setup = function() {\n        canvas = p5.createCanvas(0,0)\n        resizeCanvas()\n    \tp5.background(0)\n\n  \t\tp5.frameRate(8)\n\t\t\n\t\tcanvas.drop(gotFile)\n\n        idle()\n    }\n  \n    p5.draw = function() {\n        // console.log('draw !')\n\n        drawFrame()\n    }\n\n    function idle() {\n    \tp5.background(0)\n\n    \t// Drop text\n\t  \tp5.fill(255)\n\t  \tp5.noStroke()\n\t  \tp5.textSize(24)\n\t  \tp5.textAlign(p5.CENTER)\n\t  \tp5.text('Drag an image here', p5.width / 2, p5.height / 2)\n\t  \t// // Or text\n\t  \t// p5.textAlign(p5.CENTER)\n\t  \t// p5.text('or', p5.width / 2, p5.height / 2 + 27)\n\t\t// // Load file button\n\t\t// inputButton = p5.createButton('Load an image from your device')\n\t\t// inputButton.position(p5.width / 2 - inputButton.width / 2, p5.height / 2 + 40)\n\t\t// inputButton.mousePressed(() => console.log('yiha'))\n\n\t  \tp5.noLoop()\n    }\n\n    function drawBackFrame() {\n        if(cells) {\n\t\t\tcells.forEach((col) => {\n\t\t\t\tcol.forEach((cell) => {\n\t\t\t\t\tcell.recoverState()\n\t\t\t\t\tcell.draw()\n\t\t\t\t})\n\t\t\t})\n        }\n    }\n\n    function drawFrame() {\n        if(cells) {\n\t\t\tcells.forEach((col) => {\n\t\t\t\tcol.forEach((cell) => {\n\t\t\t\t\tcell.computeNextState()\n\t\t\t\t})\n\t\t\t})\n\t\t\tcells.forEach((col) => {\n\t\t\t\tcol.forEach((cell) => {\n\t\t\t\t\tcell.overwriteState()\n\t\t\t\t\tcell.draw()\n\t\t\t\t})\n\t\t\t})\n        }\n    }\n\n    function loadImage(file) {\n\t\t// Create an image DOM element but don't show it\n\t\t// const img = p5.createImg(file.data, \"Your image\").hide()\n\t\timage = p5.loadImage(\n\t\t\tfile.data,\n\t\t\t(img) => {\n\t\t\t\tdisplayImage(img)\n\t\t\t\tcomputeImage()\n\t  \t\t\tp5.noLoop()\n\n\t\t\t\tlaunchButton = p5.createButton('Launch !')\n\t\t\t\tlaunchButton.position(20,20)\n\t\t\t\tlaunchButton.mousePressed(() => p5.loop())\n\n\t\t\t\t// buttona = p5.createButton('previous frame')\n\t\t\t\t// buttona.position(20, 20)\n\t\t\t\t// buttona.mousePressed(() => drawBackFrame())\n\n\t\t\t\t// buttonb = p5.createButton('next frame')\n\t\t\t\t// buttonb.position(buttona.width + 40, 20)\n\t\t\t\t// buttonb.mousePressed(() => drawFrame())\n\n\t\t\t\t// p5.loop()\n\t\t\t},\n\t\t\t() => {alert('Something went wrong with your file')}\n\t\t)\n    }\n\n    function loadFromInput(input) {\n\n\t\tlet img\n\t    const reader = new FileReader()\n\t    reader.onload = function (e) {\n\t      // $('#file_img')\n\t      // getElementById('#file_img')\n\t      //   .attr('src', e.target.result)\n\t        img = e.target.result\n\t    }\n\t    reader.readAsDataURL(input.files[0])\n\n\t\tsetTimeout(\"step1a()\", 50)\n\t\t    \n    }\n\n    function displayImage(img) {\n    \t// Draw the image onto the canvas\n\t\tp5.background(255)\n\t\t// p5.background(127)\n\n\t    img.filter('gray')\n\n\t\tif(img.width > img.height) {\n\t\t\tconst ratio = img.height / img.width\n\t    \timg.resize(p5.width, p5.width * ratio)\n\t\t\tp5.image(img, 0, p5.height / 2 - img.height / 2)\n\t\t} else {\n\t\t\tconst ratio = img.width / img.height\n\t    \timg.resize(p5.height * ratio, p5.height)\n\t\t\tp5.image(img, p5.width / 2 - img.width / 2, 0)\n\t\t}\n    }\n\n    function computeImage() {\n\n\t\tconst w = p5.width/cellSize\n\t\tconst h = p5.height/cellSize\n\n\t\tcells = []\n\n\t\tp5.loadPixels()\n\n\t\t// for (var x = 0; x < p5.width; x++) {   \n\t\t// \tfor (var y = 0; y < p5.height; y++) {    \n\t\tfor (var x = 0; x < w; x++) {\n\t\t\tcells.push([])\n\t\t\tfor (var y = 0; y < h; y++) {    \n\t\t\t\t// const i = ( x + y * p5.width ) * 4\n\t\t\t\tconst i = ( (x * cellSize) + ((y * cellSize) * p5.width) ) * 4\n\n\t\t\t\tconst r = p5.pixels[i]\n\t\t\t\tconst g = p5.pixels[i + 1]\n\t\t\t\tconst b = p5.pixels[i + 2]\n\t\t\t\tconst a = p5.pixels[i + 3]\n\n\t\t\t\t// const newr = Math.round( greyValues * r / 255 ) * ( 255 / greyValues )\n\t\t\t\t// const newg = Math.round( greyValues * g / 255 ) * ( 255 / greyValues )\n\t\t\t\t// const newb = Math.round( greyValues * b / 255 ) * ( 255 / greyValues )\n\t\t\t\t// const newColor = p5.color(newr, newg, newb)\n\n\t\t\t    const newr2 = Math.round( r / colorThreshold ) * 255\n\t\t\t    const newg2 = Math.round( g / colorThreshold ) * 255\n\t\t\t    const newb2 = Math.round( b / colorThreshold ) * 255\n\t\t\t    const newColor = p5.color(newr2, newg2, newb2)\n\n\t\t\t    const alive = newColor.levels[0] < 127 ? true : false\n    \t\t\tcells[x].push(new Cell(x, y, alive))\n\t\t\t}\n\t\t}\n\n\t\tcells.forEach((col) => {\n\t\t\tcol.forEach((cell) => {\n\t\t\t\tcell.draw()\n\t\t\t})\n\t\t})\n\n\t\t// console.log('cells', cells)\n\t\t// p5.updatePixels()\n    }\n\n    class Cell {\n    \tconstructor(x, y, alive) {\n    \t\tthis.x = x\n    \t\tthis.y = y\n    \t\tthis.alive = alive\n    \t\tthis.aliveNext = null\n    \t\tthis.alivePrevious = []\n    \t}\n\n    \tget color() {\n    \t\treturn this.alive ? p5.color(0) : p5.color(255)\n    \t}\n\n    \tget numberOfAliveNeighboors() {\n    \t\t// const xMinus = this.x < 1 || this.x - 1 > cells.length - 1 ? cells.length - 1 : this.x - 1\n    \t\t// const xPluss = this.x > cells.length - 2 ? 0 : this.x + 1\n    \t\t// const yMinus = this.y < 1 || this.y - 1 > cells[this.x].length - 1 ? cells[this.x].length - 1 : this.y - 1\n    \t\t// const yPluss = this.y > cells[this.x].length - 2 ? 0 : this.y + 1\n\n    \t\tconst xMinus = this.x < 1 || this.x - 1 > cells.length - 1 ? cells.length - 1 : this.x - 1\n    \t\tconst xPluss = this.x > cells.length - 2 ? 0 : this.x + 1\n    \t\tconst yMinus = this.y < 1 || this.y - 1 > cells[this.x].length - 1 ? cells[this.x].length - 1 : this.y - 1\n    \t\tconst yPluss = this.y > cells[this.x].length - 2 ? 0 : this.y + 1\n\n    \t\tconst lu = cells[xMinus][yMinus].alive ? 1 : 0\n    \t\tconst mu = cells[this.x][yMinus].alive ? 1 : 0\n    \t\tconst ru = cells[xPluss][yMinus].alive ? 1 : 0\n    \t\tconst lc = cells[xMinus][this.y].alive ? 1 : 0\n    \t\tconst rc = cells[xPluss][this.y].alive ? 1 : 0\n    \t\tconst ld = cells[xMinus][yPluss].alive ? 1 : 0\n    \t\tconst md = cells[this.x][yPluss].alive ? 1 : 0\n    \t\tconst rd = cells[xPluss][yPluss].alive ? 1 : 0\n\n    \t\treturn lu + mu + ru + lc + rc + ld + md + rd\n    \t}\n\n    \tcomputeNextState() {\n    \t\tconst alive_neighboors = this.numberOfAliveNeighboors\n\n    \t\t// if() {\n\n    \t\t// } else if() {\n\n    \t\t// } else if() {\n\n    \t\t// }\n\n\t\t    if (!this.alive && alive_neighboors == 3) {\n\t\t      this.aliveNext = true\n\t\t    } else if (this.alive && alive_neighboors < 2) {\n\t\t      this.aliveNext = false\n\t\t    } else if (this.alive && alive_neighboors > 3) {\n\t\t      this.aliveNext = false\n\t\t    } else {\n\t\t    \tthis.aliveNext = this.alive\n\t\t    }\n\t\t    //  else {\n\t\t    // \tconsole.log(`Something went wrong at computing the state of cell ${this.x}/${this.y}`)\n\t\t    // }\n    \t}\n\n    \toverwriteState() {\n    \t\tthis.alivePrevious.push(this.alive)\n    \t\tthis.alive = this.aliveNext\n    \t\tthis.aliveNext = null\n    \t}\n\n    \trecoverState() {\n    \t\tif(this.alivePrevious.length > 0) {\n\t    \t\t// this.aliveNext = this.alive\n\t    \t\tthis.aliveNext = null\n\t    \t\tthis.alive = this.alivePrevious[this.alivePrevious.length - 1]\n\t    \t\tthis.alivePrevious.pop()\n    \t\t}\n    \t}\n\n    \tdraw() {\n\t    \tp5.fill(this.color)\n\t    \t// p5.strokeWeight(1)\n\t    \t// p5.stroke(0)\n\t    \tp5.noStroke()\n\t\t\tp5.rect(this.x * cellSize, this.y * cellSize, cellSize, cellSize)\n    \t}\n    }\n\n    function gotFile(file) {\n\t\t// If it's an image file\n\t\tif (file.type === 'image') {\n\t\t\tloadImage(file)\n\t\t} else {\n\t\t\talert('Not an image file!')\n\t\t}\n    }\n\n    function resizeCanvas() {\n        const parentWidth = canvas.parent().clientWidth\n        const parentHeight = canvas.parent().clientHeight\n        p5.resizeCanvas(parentWidth, parentHeight)\n    }\n    p5.windowResized = function() {\n        resizeCanvas()\n    }\n}","import React, {Component, Fragment} from 'react'\nimport P5Wrapper from './wrappers/p5'\n\nimport mySketch from './sketches/sketch'\n\nimport logo from './logo.svg'\nimport './App.css'\n\nclass App extends Component {\n\n  constructor(props) {\n    super(props)\n\n    this.state = {\n      sketch: mySketch\n    }\n  }\n\n  render() {\n    return (\n      <Fragment>\n        <P5Wrapper sketch={this.state.sketch}/>\n      </Fragment>\n    )\n  }\n\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}